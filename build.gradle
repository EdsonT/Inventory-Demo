plugins {
	id 'java'
	id 'org.springframework.boot' version '4.0.0-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Demo Inventory System '

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(25)
	}
}

repositories {
	mavenCentral()
	maven { url = 'https://repo.spring.io/snapshot' }
}

dependencies {
	// PostgreSQL Driver
	runtimeOnly 'org.postgresql:postgresql'

	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// JWT Dependencies
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// Lombok for reducing boilerplate (version 1.18.42 with official JDK 25 support)
	compileOnly 'org.projectlombok:lombok:1.18.42'
	annotationProcessor 'org.projectlombok:lombok:1.18.42'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

// Configure compiler arguments for Lombok + Java 25 compatibility
tasks.withType(JavaCompile).configureEach {
	options.compilerArgs.addAll([
		'--add-opens=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED',
		'--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED',
		'--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED',
		'--add-opens=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED',
		'--add-opens=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED',
		'--add-opens=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED',
		'--add-opens=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED',
		'--add-opens=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED'
	])
}

tasks.named('test') {
	useJUnitPlatform()
}
